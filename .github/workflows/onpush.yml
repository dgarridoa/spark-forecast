name: CI pipeline

on:
  pull_request:
    types: [ opened, synchronize ]
    branches:
      - 'main'

jobs:
  ci-pipeline:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Azure'
        uses: 'azure/login@v1'
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID}}
          tenant-id: ${{ secrets.AZURE_TENANT_ID}}
          suscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}

      - id: 'secrets'
        uses: 'azure/CLI@v1'
        with:
          azcliversion: latest
          inlineScript: |
            DATABRICKS_HOST=$(az keyvault secret show --name DATABRICKS-HOST --vault-name ${{ secrets.AZURE_KEYVAULT_NAME }} --query value -o tsv)
            DATABRRICKS_TOKEN=$(az keyvault secret show --name DATABRICKS-TOKEN --vault-name ${{ secrets.AZURE_KEYVAULT_NAME }} --query value -o tsv)
            echo "DATABRICKS_HOST=$DATABRICKS_HOST" >> $GITHUB_ENV
            echo "DATABRRICKS_TOKEN=$DATABRRICKS_TOKEN" >> $GITHUB_ENV

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          poetry config installer.modern-installation false

      - name: Install dependencies and project in dev mode
        run: |
          poetry install --with dev,test

      - name: Run unit tests
        run: |
          echo "Launching unit tests"
          poetry run pytest tests/unit

      - name: Deploy the workflow as a job
        run: |
          poetry run dbx deploy staging-dbx-demand-forecast \
          --environment staging

      - name: Run the workflow
        run: |
          poetry run dbx launch staging-dbx-demand-forecast --trace \
          --environment staging
