name: Release pipeline

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release-pipeline:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Azure'
        uses: 'azure/login@v1'
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID}}
          tenant-id: ${{ secrets.AZURE_TENANT_ID}}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}

      - id: 'secrets'
        uses: 'azure/CLI@v1'
        with:
          azcliversion: latest
          inlineScript: |
            DATABRICKS_HOST=$(az keyvault secret show --name "DATABRICKS-HOST" --vault-name ${{ secrets.AZURE_KEYVAULT_NAME }} --query "value" -o tsv)
            DATABRICKS_TOKEN=$(az keyvault secret show --name "DATABRICKS-TOKEN" --vault-name ${{ secrets.AZURE_KEYVAULT_NAME }} --query "value" -o tsv)
            echo "DATABRICKS_HOST=$DATABRICKS_HOST" >> $GITHUB_OUTPUT
            echo "DATABRICKS_TOKEN=$DATABRICKS_TOKEN" >> $GITHUB_OUTPUT

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -

      - name: Install dependencies and project in dev mode
        run: |
          poetry install --with dev,test

      - name:  Run pre-commit check
        run: |
          poetry run pre-commit run --all-files

      - name: Run unit tests
        run: |
          echo "Launching unit tests"
          poetry run pytest tests/unit

      - name: Intall databricks cli
        uses: databricks/setup-cli@main

      - name: Deploy the workflow as a job
        env:
          DATABRICKS_HOST: '${{ steps.secrets.outputs.DATABRICKS_HOST }}'
          DATABRICKS_TOKEN: '${{ steps.secrets.outputs.DATABRICKS_TOKEN }}'
        run: |
          databricks bundle deploy -t prod

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release for version ${{ github.ref }}.
          draft: false
          prerelease: false
