name: Release pipeline

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release-pipeline:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/992989886232/locations/global/workloadIdentityPools/dbx-demand-forecast-wip/providers/dbx-demand-forecast-github'
          service_account: 'dbx-demand-forecast@dbx-demand-forecast.iam.gserviceaccount.com'

      - id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            databricks_host:dbx-demand-forecast/dbx-demand-forecast-databricks-host
            databricks_token:dbx-demand-forecast/dbx-demand-forecast-databricks-token

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          poetry config installer.modern-installation false

      - name: Install dependencies and project in dev mode
        run: |
          poetry install --with dev,test

      - name: Run unit tests
        run: |
          echo "Launching unit tests"
          poetry run pytest tests/unit

      - name: Deploy the workflow as a job
        env:
          DATABRICKS_HOST: '${{ steps.secrets.outputs.databricks_host }}'
          DATABRICKS_TOKEN: '${{ steps.secrets.outputs.databricks_token }}'
        run: |
          poetry run dbx deploy prod-dbx-demand-forecast --environment prod

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release for version ${{ github.ref }}.
          draft: false
          prerelease: false
